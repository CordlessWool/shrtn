name: Release

on:
  push:
    branches:
      - main
permissions:
  contents: write
  pull-requests: write
concurrency: ${{ github.workflow }}-${{ github.ref }}
env:
  PUBLIC_FEATURE_MARKETING_PAGES: 'on'
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.push_tags.outputs.tag}}
    steps:
      - uses: actions/checkout@v4
      - name: bun-setup
        uses: oven-sh/setup-bun@v2
      - name: Install Dependencies
        run: bun install
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: bun run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Push Tags
        id: push_tags
        run: |
          set +e
          TAG=$(jq -r .version < package.json)
          if git ls-remote --exit-code --tags origin "refs/tags/v$TAG" >/dev/null; then
            echo "Tag v$TAG already exists"
          else
            git tag "v$TAG"
            git push origin "v$TAG"
            echo "tag=v$TAG" >> "$GITHUB_OUTPUT"
          fi
          echo "tag=v2.1.0" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  call-docker-push:
    needs: release
    if: needs.release.outputs.tag != ''
    uses: ./.github/workflows/docker-publish.yml
    with:
      tag: ${{ needs.release.outputs.tag }}
    secrets: inherit
  call-build:
    needs: release
    if: needs.release.outputs.tag != ''
    uses: ./.github/workflows/build.yml
    with:
      tag: ${{ needs.release.outputs.tag }}
    secrets: inherit
  call-deploy:
    needs: release
    if: needs.release.outputs.tag != ''
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
