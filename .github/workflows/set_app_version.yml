name: Bump Helm Chart Version

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5
      with:
        python-version: 3.x

    - name: Bump chart version and set appVersion
      id: bump_version
      run: |
        set -e

        # Input image tag
        raw_input="${{ github.event.inputs.tag }}"
        clean_input="${raw_input#v}"
        echo "Input tag: $raw_input -> Cleaned: $clean_input"

        # Extract previous appVersion and version from Chart.yaml
        chart_file="charts/shrtn/Chart.yaml"
        old_app_version=$(grep '^appVersion:' "$chart_file" | awk '{print $2}')
        old_chart_version=$(grep '^version:' "$chart_file" | awk '{print $2}')

        echo "Old appVersion: $old_app_version"
        echo "Old chart version: $old_chart_version"

        # Parse semvers
        IFS='.' read -r o_major o_minor o_patch <<< "$old_app_version"
        IFS='.' read -r n_major n_minor n_patch <<< "$clean_input"
        IFS='.' read -r c_major c_minor c_patch <<< "$old_chart_version"

        # Compute deltas
        d_major=$((n_major - o_major))
        d_minor=$((n_minor - o_minor))
        d_patch=$((n_patch - o_patch))

        # Apply deltas to chart version
        new_chart_major=$((c_major + d_major))
        new_chart_minor=$((c_minor + d_minor))
        new_chart_patch=$((c_patch + d_patch))

        new_chart_version="${new_chart_major}.${new_chart_minor}.${new_chart_patch}"
        echo "New chart version: $new_chart_version"

        # Apply changes
        sed -i "s/^version:.*/version: $new_chart_version/" "$chart_file"
        sed -i "s/^appVersion:.*/appVersion: $raw_input/" "$chart_file"

        echo "new_version=$new_chart_version" >> $GITHUB_OUTPUT
        echo "new_app_version=$raw_input" >> $GITHUB_OUTPUT

    - name: Commit changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add charts/shrtn/Chart.yaml
        git commit -m "chore(shrtn): Bump chart version to ${{ steps.bump_version.outputs.new_version }} and appVersion to ${{ steps.bump_version.outputs.new_app_version }}"

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
